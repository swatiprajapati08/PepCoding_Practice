https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/recursion-and-backtracking/words-kselection-1-official/ojquestion
import java.io.*;
import java.util.*;

public class Main {


  public static void main(String[] args) throws Exception {
    Scanner scn = new Scanner(System.in);
    String str = scn.nextLine();
    int k = scn.nextInt();

    HashSet<Character> unique = new HashSet<>();
    String ustr = "";
    for (char ch : str.toCharArray()) {
      if (unique.contains(ch) == false) {
        unique.add(ch);
        ustr += ch;
      }
    }

    combination(-1, ustr,k, "");
  }

// Box on level
  public static void combination(int i, String ustr,int k, String asf ) {
      
      if(asf.length() == k){
          System.out.println(asf);
          return;
      }
      
      for(int j = i + 1; j < ustr.length(); j++)
      {
          combination(j,ustr,k,asf+ustr.charAt(j));
      }
  }

}